# -*- coding: utf-8 -*-
"""CityOfPittsburghAnalysis.ipynb
Walter Thornton wlt423@gmail.com
Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Y4oEAza71HLG53SoejDZAzmU4tVgLaV-
"""

#!/usr/bin/env python3
#!pip install sodapy

import pandas as pd
from sodapy import Socrata
import re

# Constants
CHUNK_SIZE = 50000  # Max is 50000 per Socrata API v2.1
APP_TOKEN = None  # I was unable to sign up for an app token

# Initialize client
client = Socrata("data.pa.gov", APP_TOKEN)

# Initialize variables
offset = 0
data = []
print("Starting data fetch...")

while True:
    chunk = client.get("mcba-yywm", limit=CHUNK_SIZE, offset=offset)
    if not chunk:
        break
    data.extend(chunk)
    offset += CHUNK_SIZE
    print(f"Fetched {offset} rows...")

print(f"Total rows fetched: {len(data)}")

# Convert to DataFrame
application_in = pd.DataFrame.from_records(data)

# Split data into 2 dataframes
# application_in for complete rows, invalid_data for rows with any missingness
valid_mask = application_in.notnull().all(axis=1)
invalid_data = application_in[~valid_mask].copy()
application_in = application_in[valid_mask].copy()

# Convert all senate values in application_in to snake_case
application_in['senate'] = (
    application_in['senate']
    .str.replace(r'[^\w\s]', '', regex=True)
    .str.strip()
    .str.replace(r'\s+', '_', regex=True)
    .str.lower()
)

# Ensure dateofbirth is in datetime format
application_in['dateofbirth'] = pd.to_datetime(application_in['dateofbirth'], errors='coerce')

# Create yr_born column
application_in['yr_born'] = application_in['dateofbirth'].dt.year

# Reorder columns to place yr_born right after dateofbirth
cols = list(application_in.columns)
dob_idx = cols.index('dateofbirth')
# Remove yr_born and reinsert after dateofbirth
cols.insert(dob_idx + 1, cols.pop(cols.index('yr_born')))
application_in = application_in[cols]

# Save raw data to limit future API calls
application_in.to_csv("raw_ballot_requests.csv", index=False)
